<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[使用Sublime Text3 开发React-Native的配置]]></title>
      <url>http://yoursite.com/2016/05/21/cioh9v3py00052y8gv42nb47o/</url>
      <content type="html"><![CDATA[<p>使用Sublime Text3 开发React-Native的配置</p>
<blockquote>
<p>Sublime Text3作为功能强大，使用较为广泛的编辑器，有很强的自定义功能，插件库很庞大，针对新语言插件更新很快，配合使用可以快速搭建适配语言的开发环境。<br>Sublime Text3为共享软件，可在网上搜索下载破解版。</p>
</blockquote>
<h3 id="使用Package-Control组件安装所需插件"><a href="#使用Package-Control组件安装所需插件" class="headerlink" title="使用Package Control组件安装所需插件"></a>使用Package Control组件安装所需插件</h3><p>在使用Package Control之前首先要安装Package Control。<br>一、简单的安装方法</p>
<p>使用Ctrl+`快捷键或者通过View-&gt;Show Console菜单打开命令行，粘贴如下代码：</p>
<pre><code>import urllib.request,os,hashlib; h = &apos;2915d1851351e5ee549c20394736b442&apos; + &apos;8bc59f460fa1548d1514676163dafc88&apos;; pf = &apos;Package Control.sublime-package&apos;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( &apos;http://packagecontrol.io/&apos; + pf.replace(&apos; &apos;, &apos;%20&apos;)).read(); dh = hashlib.sha256(by).hexdigest(); print(&apos;Error validating download (got %s instead of %s), please try manual install&apos; % (dh, h)) if dh != h else open(os.path.join( ipp, pf), &apos;wb&apos; ).write(by)
</code></pre><p>如果顺利的话，此时就可以在Preferences菜单下看到Package Settings和Package Control两个菜单了。</p>
<p>二、手动安装</p>
<p>可能由于各种原因，无法使用代码安装，那可以通过以下步骤手动安装Package Control：</p>
<p>1.点击Preferences &gt; Browse Packages菜单</p>
<p>2.进入打开的目录的上层目录，然后再进入Installed Packages/目录</p>
<p>3.下载Package Control.sublime-package并复制到Installed Packages/目录</p>
<p>4.重启Sublime Text。</p>
<a id="more"></a>
<hr>
<p>安装好Package Control之后就可以开始配置React-Native所用到的插件。</p>
<p><strong>babel-sublime</strong></p>
<p><strong>sublimeLinter-jsxhint</strong></p>
<p><strong>JsFormat</strong></p>
<p><strong><a href="https://github.com/reactjs/sublime-react" target="_blank" rel="external">sublime-react</a></strong></p>
<h3 id="1-BABEL-SUBLIME"><a href="#1-BABEL-SUBLIME" class="headerlink" title="1. BABEL-SUBLIME"></a>1. BABEL-SUBLIME</h3><p>支持ES6， React.js, jsx代码高亮，对 JavaScript, jQuery 也有很好的扩展。</p>
<p>安装</p>
<p>PC：Ctrl+shift+p<br>Mac：Cmd+shift+p<br>选择Package Control:install package<br>输入babel进行安装</p>
<p>配置</p>
<p>打开.js, .jsx 后缀的文件;<br>打开菜单view， Syntax -&gt; Open all with current extension as… -&gt; Babel -&gt; JavaScript (Babel)，选择babel为默认 javascript 打开syntax</p>
<h3 id="2-SUBLIMELINTER-JSXHINT"><a href="#2-SUBLIMELINTER-JSXHINT" class="headerlink" title="2. SUBLIMELINTER-JSXHINT"></a>2. SUBLIMELINTER-JSXHINT</h3><p>JSX 代码审查，实时提示语法错误, 帮助快速定位错误点.</p>
<p>安装 node.js<br>安装 jsxhint<br>jsxhint安装:</p>
<pre><code>npm install -g jsxhint
</code></pre><p>PC上ctrl+shift+p（Mac:Cmd+shift+p）打开面板输入sublimeLinter-jsx安装(依赖于 sublimeLinter)</p>
<h3 id="3-JSFORMAT-格式化-JS-代码"><a href="#3-JSFORMAT-格式化-JS-代码" class="headerlink" title="3. JSFORMAT 格式化 JS 代码"></a>3. JSFORMAT 格式化 JS 代码</h3><p>jsformat 是 sublime 上 js 格式化比较好用的插件之一，通过修改它的e4x 属性可以使它支持 jsx。</p>
<p>安装</p>
<p>PC上ctrl+shift+p（Mac:Cmd+shift+p）打开面板输入JsFormat安装.</p>
<p>使用</p>
<p>打开preferences -&gt; Package Settings -&gt; JsFormat -&gt; Setting - Users,输入以下代码：</p>
<pre><code>{
  &quot;e4x&quot;: true,
  // jsformat options
  &quot;format_on_save&quot;: true,
}
</code></pre><p>即可保存时自动格式化，并支持 jsx 类型文件.</p>
<h3 id="4-sublime-react"><a href="#4-sublime-react" class="headerlink" title="4. sublime-react"></a>4. sublime-react</h3><p>首先必须安装 Sublime Package Manager.</p>
<p>安装: ⌘+shift+p on MacOS/Linux, ctrl+shift+p on Windows</p>
<p>输入 install, 选择 Package Control: Install Package</p>
<p>输入 React, 选择 ReactJS</p>
<p><img src="/images/pic.gif" alt="pic.gif"></p>
<p>快捷键列表:</p>
<pre><code>cdm→  componentDidMount: fn() { ... }

cdup→  componentDidUpdate: fn(pp, ps) { ... }

cs→  var cx = React.addons.classSet;

cwm→  componentWillMount: fn() { ... }

cwr→  componentWillReceiveProps: fn(np) { ... }

cwu→  componentWillUpdate: fn(np, ns) { ... }

cwun→  componentWillUnmount: fn() { ... }

cx→  cx({ ... })

fdn→  React.findDOMNode(...)

fup→  forceUpdate(...)

gdp→  getDefaultProps: fn() { return {...} } 

gis→  getInitialState: fn() { return {...} } 

ism→  isMounted()

props→  this.props.

pt→  propTypes { ... }

rcc→  component skeleton

refs→  this.refs.

ren→  render: fn() { return ... }

scu→  shouldComponentUpdate: fn(np, ns) { ... }

sst→  this.setState({ ... })

state→  this.state.
</code></pre><hr>
<blockquote>
<p>参考:</p>
<p><a href="http://www.07net01.com/2015/11/962545.html" target="_blank" rel="external">在SublimeText上搭建ReactJS开发环境</a></p>
<p><a href="http://www.cnblogs.com/terrylin/p/4942332.html" target="_blank" rel="external">Sublime Text 3 搭建 React.js 开发环境</a></p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[CenterOS配置Node服务器与MongoDB]]></title>
      <url>http://yoursite.com/2016/05/20/cioh9v3ll00002y8g54126klz/</url>
      <content type="html"><![CDATA[<h2 id="CenterOS-nodejs-配置说明"><a href="#CenterOS-nodejs-配置说明" class="headerlink" title="CenterOS nodejs 配置说明"></a>CenterOS nodejs 配置说明</h2><blockquote>
<p>vps:搬瓦工</p>
<p>os:centeros 6.5 x86</p>
</blockquote>
<h3 id="1-安装node"><a href="#1-安装node" class="headerlink" title="1. 安装node:"></a>1. 安装node:</h3><p>从EPEL库安装Node.js</p>
<p>另一个有效且简单的方法来安装Node.js就是从官方库。这同样确保您可以访问到EPEL库，可以通过运行以下命令。</p>
<pre><code>sudo yum install epel-release
</code></pre><p>现在可以使用yum命令安装Node.js了。</p>
<pre><code>sudo yum install nodejs
</code></pre><p>因为在开发过程中我需要管理节点包，我还要安装新公共管理的软件包管理器，使用以下命令。</p>
<pre><code>sudo yum install npm
</code></pre><h3 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2. 安装git"></a>2. 安装git</h3><pre><code>yum  group install &quot;Development Tools&quot;
</code></pre><a id="more"></a>
<h3 id="3-mongodDB"><a href="#3-mongodDB" class="headerlink" title="3. mongodDB"></a>3. mongodDB</h3><blockquote>
<p>一种使用MongoDB安装文件安装<br><a href="http://blog.csdn.net/zhangfeng19880710/article/details/20166853" target="_blank" rel="external">http://blog.csdn.net/zhangfeng19880710/article/details/20166853</a><br><a href="http://www.cnblogs.com/shanyou/archive/2012/07/14/2591838.html" target="_blank" rel="external">http://www.cnblogs.com/shanyou/archive/2012/07/14/2591838.html</a></p>
</blockquote>
<pre><code>yum install mongodb
yum install mongodb-server
</code></pre><p>前面安装来说都是很顺利的，但是在启动的时候遇到了这么一个问题</p>
<pre><code>ERROR: dbpath (/data/db/) does not exist.
Create this directory or give existing directory in --dbpath. See http://dochub.mongodb.org/core/startingandstoppingmongo
</code></pre><p>从这个问题来看 ，应该是没有创建 /data/db 目录，那么就用 </p>
<pre><code>sudo mkdir -p /data/db
</code></pre><p>命令创建。但问题是重新启动还是出现了同样的问题，原因是文件夹的权限不够，那么解决的方法就是允许文件夹有读写的权限即可，那么运行下面的命令</p>
<pre><code>sudo chmod 777 -R /data
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://yoursite.com/2016/05/20/cioh9v3pr00042y8g182o21bf/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
